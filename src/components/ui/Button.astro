---
// src/components/ui/Button.astro
interface Props {
  as?: 'button' | 'a';
  href?: string;
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  ariaLabel?: string;
  class?: string;
}

const {
  as = 'button',
  href = '#',
  variant = 'primary',
  size = 'md',
  type = 'button',
  disabled = false,
  ariaLabel,
  class: className = ''
} = Astro.props as Props;

const sizes = {
  sm: 'h-9 px-3 text-sm rounded-md',
  md: 'h-11 px-5 text-base rounded-lg',
  lg: 'h-12 px-6 text-lg rounded-xl'
} as const;

const variants = {
  primary:   'bg-cm-500 text-white shadow-sm hover:shadow-md hover:opacity-95 focus-visible:ring-cm-500',
  secondary: 'bg-white text-cm-500 border border-cm-500 hover:bg-cm-500/10 focus-visible:ring-cm-500',
  ghost:     'bg-transparent text-cm-500 hover:bg-cm-500/10 focus-visible:ring-cm-500'
} as const;

const base =
  'inline-flex items-center justify-center font-semibold transition-[transform,box-shadow,opacity] duration-150 ease-in-out focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed motion-safe:hover:scale-[1.02] active:scale-[0.98]';

const classes = [
  base,
  sizes[size] ?? sizes.md,
  variants[variant] ?? variants.primary,
  disabled && as === 'a' ? 'pointer-events-none' : '',
  className
].filter(Boolean).join(' ');

const isAnchor = as === 'a';
---

{isAnchor ? (
  <a
    href={href}
    class={classes}
    aria-label={ariaLabel}
    aria-disabled={disabled ? 'true' : 'false'}
    tabindex={disabled ? -1 : undefined}
    role="button"
  >
    <slot />
  </a>
) : (
  <button
    type={type}
    class={classes}
    aria-label={ariaLabel}
    disabled={disabled}
  >
    <slot />
  </button>
)}
